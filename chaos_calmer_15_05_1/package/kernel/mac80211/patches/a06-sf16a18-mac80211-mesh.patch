Author: Pedersen, Thomas <twp@qca.qualcomm.com>
Date:   Tue Sep 6 11:59:00 2016 -0700

mac80211: make mpath path fixing more robust

A fixed mpath was not quite being treated as such:

1 if a PERR frame was received, a fixed mpath was
deactivated.

2 queued path discovery for fixed mpath was potentially
being considered, changing mpath state.

3 other mpath flags were potentially being inherited when
fixing the mpath. Just assign PATH_FIXED and SN_VALID.

This solves several issues when fixing a mesh path in one
direction. The reverse direction mpath should probably
also be fixed, or root announcements at least be enabled.

Signed-off-by: Thomas Pedersen <twp@qca.qualcomm.com>
Signed-off-by: Johannes Berg <johannes.berg@intel.com>
---

--- a/net/mac80211/mesh_hwmp.c	2019-05-17 09:11:57.506662571 +0800
+++ b/net/mac80211/mesh_hwmp.c	2019-05-16 19:19:05.197189246 +0800
@@ -746,6 +746,7 @@
 		sta = next_hop_deref_protected(mpath);
 		if (mpath->flags & MESH_PATH_ACTIVE &&
 		    ether_addr_equal(ta, sta->sta.addr) &&
+		    !(mpath->flags & MESH_PATH_FIXED) &&
 		    (!(mpath->flags & MESH_PATH_SN_VALID) ||
 		    SN_GT(target_sn, mpath->sn)  || target_sn == 0)) {
 			mpath->flags &= ~MESH_PATH_ACTIVE;

--- a/net/mac80211/mesh_pathtbl.c	2019-05-17 09:09:35.238658377 +0800
+++ b/net/mac80211/mesh_pathtbl.c	2019-05-17 09:10:39.438660270 +0800
@@ -1099,7 +1099,7 @@
 	mpath->metric = 0;
 	mpath->hop_count = 0;
 	mpath->exp_time = 0;
-	mpath->flags |= MESH_PATH_FIXED;
+	mpath->flags = MESH_PATH_FIXED | MESH_PATH_SN_VALID;
 	mesh_path_activate(mpath);
 	spin_unlock_bh(&mpath->state_lock);
 	mesh_path_tx_pending(mpath);
