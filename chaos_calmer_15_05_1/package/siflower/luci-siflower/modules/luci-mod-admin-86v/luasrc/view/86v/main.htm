<%+header%>
<div>
    <div id="Error">
        <div id="hsErr" class="hsTip">
            <i class="altIcon"></i>
			<span class="detail"><%:successfully set%></span>
			<input class="subBtn" value="<%:confirm%>" type="button" onclick="closeTip()">
        </div>
    </div>
    <fieldset class="inline-fieldset">
	<legend><%:device info%></legend>
        <table>
			<tr><td class="inline-text-L"><p><%:device model%></p></td><td class="inline-text-R"><span id="device_mode"></span></td></tr>
			<tr><td class="inline-text-L"><%:MAC-Address%></td><td class="inline-text-R"><span id="mac"></span></td></tr>
			<tr><td class="inline-text-L"><%:IP address%></td><td class="inline-text-R"><span id="ipaddr"></span></td></tr>
			<tr><td class="inline-text-L"><%:current system time%></td><td class="inline-text-R"><span id="time"></span></td></tr>
			<tr><td class="inline-text-L"><%:system runtime%></td><td class="inline-text-R"><span id="run_time"></span></td></tr>
        </table>
    </fieldset>
    <div class="div-block"> </div>
    <fieldset class="inline-fieldset">
		<legend><%:wireless param%></legend>
        <table id="advance">
            <tr><td colspan="2" class="no-border" style="text-align: left;padding-left: 60px;">
                <input type="radio" name="wireless-param" onchange="switchRaido(['advance-5g','advance'],['wireless-param',0])" checked="checked"> 2.4G
                <input type="radio" name="wireless-param" onchange="switchRaido(['advance','advance-5g'],['wireless-param-5g',1])"> 5G
                <!--<button onclick="switchTable(['advance-5g','advance'])" style="background: #C9C9C9">2.4G</button>
                <button onclick="switchTable(['advance','advance-5g'])">5G</button>-->
            </td></tr>
			<tr><td class="inline-text-L"><%:wireless mode%></td><td class="inline-text-R"><span id="mode"></span></td></tr>
			<tr><td class="inline-text-L"><%:band bandwidth%></td><td class="inline-text-R"><span id="bandwidth"></span></td></tr>
			<tr><td class="inline-text-L"><%:Channel%></td><td class="inline-text-R"><span id="channel"></span></td></tr>
            <!--<tr><td>WDS状态：</td><td><span></span></td></tr>-->
        </table>
        <table id="advance-5g" style="display: none">
            <tr><td colspan="2" class="no-border" style="text-align: left;padding-left: 60px;">
                <input type="radio" name="wireless-param-5g" onchange="switchRaido(['advance-5g','advance'],['wireless-param',0])" checked="checked"> 2.4G
                <input type="radio" name="wireless-param-5g" onchange="switchRaido(['advance','advance-5g'],['wireless-param-5g',1])"> 5G
                <!--<button onclick="switchTable(['advance-5g','advance'])">2.4G</button>
                <button onclick="switchTable(['advance','advance-5g'])"style="background: #C9C9C9">5G</button>-->
            </td></tr>
			<tr><td class="inline-text-L"><%:wireless mode%></td><td class="inline-text-R"><span id="mode-5"></span></td></tr>
			<tr><td class="inline-text-L"><%:band bandwidth%></td><td class="inline-text-R"><span id="bandwidth-5"></span></td></tr>
			<tr><td class="inline-text-L"><%:Channel%></td><td class="inline-text-R"><span id="channel-5"></span></td></tr>
            <!--<tr><td>WDS状态：</td><td><span></span></td></tr>-->
        </table>
    </fieldset>
    <fieldset>
		<legend><%:wireless service%></legend>
        <input type="radio" class="radioabsolution" name="wireless-service" onchange="switchRaido(['wireless-service-table-5g','wireless-service-table'],['wireless-service',0])" checked="checked"><span class="input-radio"> 2.4G</span>
        <input type="radio" class="radioabsolution" name="wireless-service" onchange="switchRaido(['wireless-service-table','wireless-service-table-5g'],['wireless-service',1])"><span class="input-radio"> 5G</span>
        <!--<button id="wiress-tb-24g" onclick="switchTable(['wireless-service-table-5g','wireless-service-table'],['wiress-tb-24g','wiress-tb-5g'])" style="background: #C9C9C9">2.4G</button>
        <button id="wiress-tb-5g" onclick="switchTable(['wireless-service-table','wireless-service-table-5g'],['wiress-tb-5g','wiress-tb-24g'])">5G</button>-->
        <table id="wireless-service-table">
        </table>
        <table id="wireless-service-table-5g" style="display: none">
        </table>
    </fieldset>
    <div id="wireless-service-setting" class="hsVignetteCon" style="display: none;">
        <div class="hsVignette hsVigWDS">
            <p class="hsVigTtop"><i class="hsVigClose" onclick="closeSettingDiv()"></i></p>
            <p class="hsVigWDSPWD" ><span class="wireless-service-setting-font"><%:wireless service%></span></p>
            <fieldset>
                <legend></legend>
                <table class="no-border">
					<tr><td class="inline-text-L"><%:SSID%></td><td class="inline-text-R"><input id="setting-name"  onkeyup="noSpaceWord(this)" maxlength="32" style="float: left"><input type="checkbox" id="setting-broadcast" style="float: left;margin-top: 12px"><label style="float: left;margin-top: 12px"><%:broadcast%></label>
                        <i class="btnHelp" onclick="getHelp('opBraFeg')" style="margin-left: 10px"></i>
                        <li class="btnHelp">
                            <div id="opBraFeg" class="btnFeg" style="visibility: hidden;width: 140px;">
                                <i class="" ></i>
								<p class="helpWord" ><%:WiFi stop broadcasting when disable%></p>
                            </div>
                        </li>
                    </td></tr>
					<tr><td class="inline-text-L"><%:network name encoding%></td><td class="inline-text-R">
                        <!--<input type="radio" name="setting-encode" value="GB2312">GB2312-->
                        <input type="radio" name="setting-encode" value="UTF-8" checked>UTF-8
                    </td></tr>
<tr><td id="setting-is_guest" class="inline-text-L"><%:network type%></td><td class="inline-text-R"><select id="setting-net-type" style="float: left;" onchange="isolateDefault(this);">
								<option value="1"><%:employee network%></option>
								<option value="2"><%:visitor network%></option>
                    </select>
                        <i class="btnHelp" onclick="getHelp('wirTpFeg')" ></i>
                        <li class="btnHelp">
                            <div id="wirTpFeg" class="btnFeg" style="visibility: hidden;">
                                <i class="" ></i>
								<p class="helpWord"><%:Employee network introduce%><br> <%:Visitor network introduce%></p>
                            </div>
                        </li>
                    </td></tr>
					<tr><td class="inline-text-L"><%:encryption%></td><td class="inline-text-R"><select id="setting-encrypt" onchange="changeEnc(this)">
								<option value="none"><%:not encrypt%></option>
                        <option value="psk2+ccmp">psk2+ccmp</option>
                    </select></td></tr>
					<tr><td class="inline-text-L"><%:set password%></td><td class="inline-text-R"><input id="password" onkeyup="nStrLimit(this)" maxlength="63"></td></tr>
					<tr><td class="inline-text-L"><%:wireless internal isolation%></td><td class="inline-text-R"><input type="checkbox" id="setting-isolate" style="float: left;margin-top: 1px;"><label style="float: left;margin-top: 2px;"><%:enable%></label>
                        <i class="btnHelp" onclick="getHelp('wirDisFeg')" style="margin-left: 20px;margin-top: 0px;"></i>
                        <li class="btnHelp">
                            <div id="wirDisFeg" class="btnFeg" style="visibility: hidden;">
                                <i style="top: 3px;"></i>
								<p class="helpWord"><%:Isolate introduce%></p>
                            </div>
                        </li>
                    </td></tr>
					<tr><td class="inline-text-L"><%:Enable/disable this network%></td><td class="inline-text-R"><input type="checkbox" id="setting-enable"style="float: left"><label style="float: left"><%:enable%></label>
                    </td></tr>
					<tr><td class="no-border"></td><td class="inline-text-R"><button id="wirelessSetBtn" onclick="setWirelessNet()"><%:confirm%></button></td></tr>
                </table>

            </fieldset>
        </div>
    </div>
    <fieldset>
		<legend><%:wireless client%></legend>
        <input type="radio" class="radioabsolution" name="wireless-client" onchange="switchRaido(['wireless-client-table-5g','wireless-client-table'],['wireless-client',0])" checked="checked"><span class="input-radio"> 2.4G</span>
        <input type="radio" class="radioabsolution" name="wireless-client" onchange="switchRaido(['wireless-client-table','wireless-client-table-5g'],['wireless-client',1])"> <span class="input-radio"> 5G</span>
        <!--<button id="client-tb-24g" onclick="switchTable(['wireless-client-table-5g','wireless-client-table'],['client-tb-24g','client-tb-5g'])" style="background: #C9C9C9">2.4G</button>
        <button id="client-tb-5g" onclick="switchTable(['wireless-client-table','wireless-client-table-5g'],['client-tb-5g','client-tb-24g'])">5G</button>-->
        <table id="wireless-client-table">
        </table>
        <table id="wireless-client-table-5g" style="display: none">
        </table>
    </fieldset>
</div>
<%+footer%>
<script type="text/javascript">
    var zones;
    var zone;
    var services;
    var service_24g;
    var service_5g;
    var advance_24g;
    var advance_5g;
    var client_24g;
    var client_5g;
    var selected_band;
    var selected_index;
    var errTipDoc;
    getDeviceInfo();
    getWirelessAdvance();
    getWirelessNet();
    getWirelessClient();
    setInterval(function () {
        getWirelessClient();
    },5000);
    document.getElementsByName('wireless-service')[0].checked = 'checked';
    document.getElementsByName('wireless-param')[0].checked = 'checked';
    document.getElementsByName('wireless-client')[0].checked = 'checked';
    function getDeviceInfo() {
        XHR.get('<%=luci.dispatcher.build_url("admin", "mainp","get_device_info")%>', null,
            function(x, result){
                console.log(result);
                zone = result.info.zone;
                zones = result.info.zones;
                if (result.info.device_mode != undefined) {
                    document.getElementById('device_mode').innerText = result.info.device_mode;
                }
                if (result.info.mac != undefined) {
                    document.getElementById('mac').innerText = result.info.mac;
                }
                if (result.info.ip != undefined) {
                    document.getElementById('ipaddr').innerText = result.info.ip;
                }
                if (result.info.time != undefined) {
                    var curTime;
                    var run_timeSeconds;
                    var run_time;
                    var run_days = '';
                    var tx = 0;
                    setInterval(function () {
                        var myDate = getNowFormatDate();
                        curTime = formatDateTime(result.info.time,tx);
                        //document.getElementById('time').innerText = curTime;
                        document.getElementById('time').innerText = myDate;
                        run_timeSeconds = result.info.time - result.info.start_time;
                        if (run_timeSeconds > 86400) {
                            run_days = parseInt(run_timeSeconds/86400) + 'day';
                        }
                        run_time = timestampToTime(run_timeSeconds);
                        document.getElementById('run_time').innerText = run_days + run_time.time;
                        result.info.time++;
                        tx++;
                    }, 1000);
                }
            });
    }
    function getWirelessClient() {
        XHR.get('<%=luci.dispatcher.build_url("admin", "mainp","get_wireless_client")%>', null,
            function(x, result){
                console.log(result);
                client_24g = result.band2;
                client_5g = result.band5;
				var html = '<tr><th><%:index%></th><th><%:MAC-Address%></th><th><%:Access Wireless SSID%></th><th><%:Access time%></th></tr>';
				var html_5g = '<tr><th><%:index%></th><th><%:MAC-Address%></th><th><%:Access Wireless SSID%></th><th><%:Access time%></th></tr>';
                for (var i=0; i<client_24g.length; i++) {
                    html += '<tr><td>'+(i+1)+'</td><td>'+client_24g[i].mac+'</td><td>'+
                        client_24g[i].wireless_net+'</td><td>'+client_24g[i].connect_time+'</td></tr>';
                }
                for (var i=0; i<client_5g.length; i++) {
                    html_5g += '<tr><td>'+(i+1)+'</td><td>'+client_5g[i].mac+'</td><td>'+
                        client_5g[i].wireless_net+'</td><td>'+client_5g[i].connect_time+'</td></tr>';
                }
                var wirelessClientTable=document.getElementById('wireless-client-table');
                if(wirelessClientTable){
                    setTableInnerHTML(wirelessClientTable,html);
                }
                var wirelessClientTable_5g=document.getElementById('wireless-client-table-5g');
                if(wirelessClientTable_5g){
                    setTableInnerHTML(wirelessClientTable_5g,html_5g);
                }
            });
    }
    function getWirelessNet() {
        XHR.get('<%=luci.dispatcher.build_url("admin", "wirelessp","get_wireless_net")%>', null,
            function(x, result){
                console.log(result);
                services = result;
                service_24g = result.band2;
                service_5g = result.band5;
				var html = '<tr><th><%:index%></th><th><%:SSID%></th><th><%:network type%></th>'+
				'<th><%:Password%></th><th><%:Status%></th><th><%:set%></th></tr>';
				var html_5g = '<tr><th><%:index%></th><th><%:SSID%></th><th><%:network type%></th>'+
				'<th><%:Password%></th><th><%:Status%></th><th><%:set%></th></tr>';
                for (var i=0; i < service_24g.length; i++) {
                    if (parseInt(service_24g[i].enable) == 0) {
					service_24g[i].enable_t = '<%:disable%>';
                    } else {
					service_24g[i].enable_t = '<%:enable%>';
                    }
                    if (service_24g[i].group == "1") {
					service_24g[i].group_t = '<%:employee network%>';
                    } else {
					service_24g[i].group_t = '<%:visitor network%>';
                    }
                }
                for (var i=0; i<service_24g.length; i++) {
                    var pwd = service_24g[i].password==undefined?'':service_24g[i].password;
                    html += '<tr><td>'+(i+1)+'</td><td>'+service_24g[i].name+'</td><td>'+
                        service_24g[i].group_t+'</td><td>'+pwd+'</td><td>'+
						service_24g[i].enable_t+'</td><td><button onclick="wirelessServiceSetting('+i+')"><%:set%></button></td></tr>';
                }
                for (var i=0; i<service_5g.length; i++) {
                    if (parseInt(service_5g[i].enable) == 0) {
						service_5g[i].enable_t = '<%:disable%>';
                    } else {
						service_5g[i].enable_t = '<%:enable%>';
                    }
                    if (service_5g[i].group == "1") {
						service_5g[i].group_t = '<%:employee network%>';
                    } else {
						service_5g[i].group_t = '<%:visitor network%>';
                    }
                }
                for (var i=0; i<service_5g.length; i++) {
                    var pwd = service_5g[i].password==undefined?'':service_5g[i].password;
                    html_5g += '<tr><td>'+(i+1)+'</td><td>'+service_5g[i].name+'</td><td>'+
                        service_5g[i].group_t+'</td><td>'+pwd+'</td><td>'+
						service_5g[i].enable_t+'</td><td><button onclick="wirelessServiceSetting5('+i+')"><%:set%></button></td></tr>';
                }
                var wirelessServiceTable=document.getElementById('wireless-service-table');
                if(wirelessServiceTable){
                    setTableInnerHTML(wirelessServiceTable,html);
                }
                var wirelessServiceTable_5g=document.getElementById('wireless-service-table-5g');
                if(wirelessServiceTable_5g){
                    setTableInnerHTML(wirelessServiceTable_5g,html_5g);
                }
            });
    }
    function setWirelessNet() {
        console.log(selected_band);
        if (selected_band == '2.4G') {
            services.band2[selected_index].name = document.getElementById('setting-name').value;
            var radios = document.getElementsByName('setting-encode');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    services.band2[selected_index].encode = radios[i].value;
                }
            }
            var encryptSelect = document.getElementById('setting-encrypt');
            var encryptSelectIndex = encryptSelect.selectedIndex;
            services.band2[selected_index].encrypt = encryptSelect[encryptSelectIndex].value;
            var password = document.getElementById('password').value;
            services.band2[selected_index].password = password;
            var netTypeSelect = document.getElementById('setting-net-type');
            var netTypeSelectIndex = netTypeSelect.selectedIndex;
            services.band2[selected_index].group = netTypeSelect[netTypeSelectIndex].value;
            if (document.getElementById('setting-isolate').checked) {
                services.band2[selected_index].isolate = '1';
            } else {
                services.band2[selected_index].isolate = '0';
            }
            if (document.getElementById('setting-enable').checked) {
                services.band2[selected_index].enable = '1';
            } else {
                services.band2[selected_index].enable = '0';
            }
            console.log("setting-broadcast2",document.getElementById('setting-broadcast').checked);
            services.band2[selected_index].broadcast = document.getElementById('setting-broadcast').checked;
            var err = document.getElementById('Error');
            var text = err.getElementsByTagName('span')[0];
            if (services.band2[selected_index].name == ''){
				text.innerText = '<%:Please enter wireless name%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('setting-name');
                getWirelessNet();
                return;
            }else if (strlen(services.band2[selected_index].name)>32){
				text.innerText = '<%:wireless name length error%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('setting-name');
                getWirelessNet();
                return;
            }else {
                if (getChanLen(services.band2[selected_index].name)>10){
					text.innerText = '<%:wireless name characters error%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('setting-name');
                    getWirelessNet();
                    return;
                }
            }
            if (encryptSelect[encryptSelectIndex].value!="none"){
                if (password.length<8){
					text.innerText = '<%:wireless password error%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('password');
                    getWirelessNet();
                    return;
                }
                if (password != check(password)){
                    text.innerText = '<%:input password invalid%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('password');
                    getWirelessNet();
                    return;
                }
            }
            var params = {'band2':services.band2[selected_index]};
        } else {
            services.band5[selected_index].name = document.getElementById('setting-name').value;
            var radios = document.getElementsByName('setting-encode');
            for (var i=0; i<radios.length; i++) {
                if (radios[i].checked) {
                    services.band5[selected_index].encode = radios[i].value;
                }
            }
            var encryptSelect = document.getElementById('setting-encrypt');
            var encryptSelectIndex = encryptSelect.selectedIndex;
            services.band5[selected_index].encrypt = encryptSelect[encryptSelectIndex].value;
            var password = document.getElementById('password').value;
            services.band5[selected_index].password = password;
            var netTypeSelect = document.getElementById('setting-net-type');
            var netTypeSelectIndex = netTypeSelect.selectedIndex;
            services.band5[selected_index].group = netTypeSelect[netTypeSelectIndex].value;
            if (document.getElementById('setting-isolate').checked) {
                services.band5[selected_index].isolate = '1';
            } else {
                services.band5[selected_index].isolate = '0';
            }
            if (document.getElementById('setting-enable').checked) {
                services.band5[selected_index].enable = '1';
            } else {
                services.band5[selected_index].enable = '0';
            }
            console.log("setting-broadcast5",document.getElementById('setting-broadcast').checked);
            services.band5[selected_index].broadcast = document.getElementById('setting-broadcast').checked;
            var err = document.getElementById('Error');
            var text = err.getElementsByTagName('span')[0];
            if (services.band5[selected_index].name == ''){
				text.innerText = '<%:Please enter wireless name%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('setting-name');
                getWirelessNet();
                return;
            }else if (strlen(services.band5[selected_index].name)>32){
				text.innerText = '<%:wireless name length error%>';
                err.style.visibility = 'visible';
                errTipDoc = document.getElementById('setting-name');
                getWirelessNet();
                return;
            }else {
                if (getChanLen(services.band5[selected_index].name)>10){
					text.innerText = '<%:wireless name characters error%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('setting-name');
                    getWirelessNet();
                    return;
                }
            }
            if (encryptSelect[encryptSelectIndex].value!="none"){
                if (password.length<8){
					text.innerText = '<%:wireless password error%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('password');
                    getWirelessNet();
                    return;
                }
                if (password != check(password)){
                    text.innerText = '<%:input password invalid%>';
                    err.style.visibility = 'visible';
                    errTipDoc = document.getElementById('password');
                    getWirelessNet();
                    return;
                }
            }
            var params = {'band5':services.band5[selected_index]};
        }
        console.log(params);
        document.getElementById('wirelessSetBtn').disabled = true;
        XHR.post('<%=luci.dispatcher.build_url("admin", "wirelessp","set_wireless_net")%>', params,
            function(x, result){
                document.getElementById('wirelessSetBtn').disabled = false;
                console.log(result);
                var err = document.getElementById('Error');
                var text = err.getElementsByTagName('span')[0];
                getWirelessNet();
                if (result==null){
                    err.style.visibility = 'visible';
					text.innerText = '<%:Connection failed, please try again%>';
                }else if (result.code == 0) {
                    err.style.visibility = 'visible';
					text.innerText = '<%:set successfully%>';
                    document.getElementById('wireless-service-setting').style.display = 'none';
                }else {
                    err.style.visibility = 'visible';
                    text.innerText = result.msg;
                }
            });
    }
    function getWirelessAdvance() {
        XHR.get('<%=luci.dispatcher.build_url("admin", "mainp","get_wireless_params")%>', null,
            function(x, result){
                console.log(result);
                advance_24g = result.band2;
                advance_5g = result.band5;
                if (advance_24g.hwmode != undefined) {
                    document.getElementById('mode').innerText = advance_24g.hwmode;
                }
                if (advance_24g.htmode != undefined) {
                    document.getElementById('bandwidth').innerText = advance_24g.htmode;
                }
                if (advance_24g.channel != undefined && advance_24g.channel != 0) {
                    document.getElementById('channel').innerText = advance_24g.channel;
                }else{
                    document.getElementById('channel').innerText = '<%:changing%>';
                }
                if (advance_5g.hwmode != undefined) {
                    document.getElementById('mode-5').innerText = advance_5g.hwmode;
                }
                if (advance_5g.htmode != undefined) {
                    document.getElementById('bandwidth-5').innerText = advance_5g.htmode;
                }
                if (advance_5g.channel != undefined && advance_5g.channel != 0) {
					document.getElementById('channel-5').innerText = advance_5g.channel;
                }else{
                    document.getElementById('channel-5').innerText = '<%:changing%>';
                }
            });
    }
    function wirelessServiceSetting(i) {
        document.getElementById('opBraFeg').style.visibility='hidden';
        document.getElementById('wirTpFeg').style.visibility='hidden';
        document.getElementById('wirDisFeg').style.visibility='hidden';
        console.log(i);
        document.getElementById('wireless-service-setting').style.display = '';
        selected_band = '2.4G';
        selected_index = i;
        document.getElementById('setting-name').value = service_24g[i].name;
        document.getElementById('setting-broadcast').checked = service_24g[i].broadcast;
        if (service_24g[i].broadcast != undefined) {
            if (service_24g[i].broadcast) {
                document.getElementById('setting-broadcast').checked = true;
            } else {
                document.getElementById('setting-broadcast').checked = false;
            }
        }
        var radios = document.getElementsByName('setting-encode');
        for (var j=0; j<radios.length; j++) {
            if (radios[j].value == service_24g[i].encode) {
                radios[j].checked = true;
                break;
            }
        }
        var netTypeSelect = document.getElementById('setting-net-type');
        for (var j=0; j<netTypeSelect.options.length; j++) {
            if (netTypeSelect[j].value == service_24g[i].group) {
                netTypeSelect.selectedIndex = j;
            }
        }
       /* if (service_24g[i].group!=undefined){
            netTypeSelect.selectedIndex = parseInt(service_24g[i].group)-1;
        }*/

        var encryptSelect = document.getElementById('setting-encrypt');
        for (var j=0; j<encryptSelect.options.length; j++) {
            if (encryptSelect[j].value == service_24g[i].encrypt) {
                encryptSelect.selectedIndex = j;
            }
        }

        if (service_24g[i].encrypt == "none"){
            document.getElementById('password').disabled = true;
        }else {
            document.getElementById('password').disabled = false;
        }
        if (service_24g[i].password!=undefined){
            document.getElementById('password').value = service_24g[i].password;
        }else {
            document.getElementById('password').value = '';
        }

        if (service_24g[i].isolate != undefined) {
            if (parseInt(service_24g[i].isolate) == 1) {
                document.getElementById('setting-isolate').checked = true;
            } else {
                document.getElementById('setting-isolate').checked = false;
            }
        }
        if (service_24g[i].enable != undefined) {
            if (service_24g[i].enable) {
                document.getElementById('setting-enable').checked = true;
            } else {
                document.getElementById('setting-enable').checked = false;
            }
        }
    }
    function wirelessServiceSetting5(i) {
        document.getElementById('opBraFeg').style.visibility='hidden';
        document.getElementById('wirTpFeg').style.visibility='hidden';
        document.getElementById('wirDisFeg').style.visibility='hidden';
        console.log('5G'+i);
        document.getElementById('wireless-service-setting').style.display = '';
        selected_band = '5G';
        selected_index = i;
        document.getElementById('setting-name').value = service_5g[i].name;
        document.getElementById('setting-broadcast').checked = service_5g[i].broadcast;
        if (service_5g[i].broadcast != undefined) {
            if (service_5g[i].broadcast) {
                document.getElementById('setting-broadcast').checked = true;
            } else {
                document.getElementById('setting-broadcast').checked = false;
            }
        }
        var radios = document.getElementsByName('setting-encode');
        for (var j=0; j<radios.length; j++) {
            if (radios[j].value == service_5g[i].encode) {
                radios[j].checked = true;
                break;
            }
        }
        var netTypeSelect = document.getElementById('setting-net-type');
        for (var j=0; j<netTypeSelect.options.length; j++) {
            if (netTypeSelect[j].value == service_5g[i].group) {
                netTypeSelect.selectedIndex = j;
            }
        }
        /*if (service_5g[i].group!=undefined){
            netTypeSelect.selectedIndex = parseInt(service_5g[i].group)-1;
        }*/
        var encryptSelect = document.getElementById('setting-encrypt');
        for (var j=0; j<encryptSelect.options.length; j++) {
            if (encryptSelect[j].value == service_5g[i].encrypt) {
                encryptSelect.selectedIndex = j;
            }
        }

        if (service_5g[i].encrypt == "none"){
            document.getElementById('password').disabled = true;
        }else {
            document.getElementById('password').disabled = false;
        }
        if (service_5g[i].password!=undefined) {
            document.getElementById('password').value = service_5g[i].password;
        }else {
            document.getElementById('password').value = '';
        }
        if (service_5g[i].isolate != undefined) {
            if (parseInt(service_5g[i].isolate)==1) {
                document.getElementById('setting-isolate').checked = true;
            } else {
                document.getElementById('setting-isolate').checked = false;
            }
        }
        if (service_5g[i].enable != undefined) {
            if (service_5g[i].enable) {
                document.getElementById('setting-enable').checked = true;
            } else {
                document.getElementById('setting-enable').checked = false;
            }
        }
    }
    function switchTable(arr,bt) {
        document.getElementById(arr[0]).style.display = 'none';
        document.getElementById(arr[1]).style.display = '';
        document.getElementById(bt[0]).style.backgroundColor = "#c9c9c9"
        document.getElementById(bt[1]).style.backgroundColor = "#a0d468"

    }
    function timestampToTime(timestamp) {
        var date = new Date(timestamp * 1000);
        var Y = date.getUTCFullYear() + '-';
        var M = (date.getUTCMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';
        var D = date.getUTCDate();
        var h = date.getUTCHours();
        var m = date.getUTCMinutes();
        var s = date.getUTCSeconds();
        var dateAndTime = {'date':Y+zero(M)+zero(D), 'time':this.zero(h)+":"+this.zero(m)+":"+this.zero(s)};
        return dateAndTime;
    }
    function zoneoffset(zone) {
        var n;
        var zhour;
        var zmin;
        var symbol;
        n = zone.search(/GMT/i);
        zhour = zone.substr(n + 4, 2);
        zmin = zone.substr(n + 7, 2);
        symbol = zone.substr(n + 3, 1);
        zhour = parseInt(zhour);
        zmin = parseInt(zmin);
        n = zhour * 3600 + zmin * 60;
        if (symbol == "+")
            return n;
        else if (symbol == "-")
            return -n;
        else
            return 0;
    }
    function zoneOption() {
        var zonesSelect = document.getElementById('zones-select');
        var zonesSelectedIndex = zonesSelect.selectedIndex;
        var zoneIndex = zonesSelect[zonesSelectedIndex].value;
        zone = zones[zoneIndex];
    }
    function zero(s) {
        return s < 10 ? '0' + s: s;
    }
    function closeSettingDiv() {
        document.getElementById('wireless-service-setting').style.display = 'none';
    }

    function changeEnc(e) {
        if (e.value=="none"){
            document.getElementById('password').disabled = true;
            document.getElementById('password').value = '';
        }else {
            document.getElementById('password').disabled = false;
        }
    }

    function isolateDefault(e) {
        if (e[e.selectedIndex].text == '<%:visitor network%>'){
            document.getElementById('setting-isolate').checked = true;
        } else {
            document.getElementById('setting-isolate').checked = false;
        }
    }

</script>
